# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: iOS binary build & upload

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

jobs:
  deploy:
    runs-on: macos-14

    strategy:
      matrix:
        node-version: [18.x]
        ruby-version: [3.3]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: "Set login password for downloading mapbox SDK"
        uses: extractions/netrc@v2
        with:
          machine: api.mapbox.com
          username: mapbox
          password: ${{ secrets.MAPBOX_SDK_REGISTRY_TOKEN }}
      - run: npm ci
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
          working-directory: ios
      - uses: actions/cache@v2
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: CocoaPod Install
        working-directory: ios
        run: pod install
      - name: Decode signing certificate into a file
        working-directory: ios
        env:
          CERTIFICATE_BASE64: ${{ secrets.IOS_DIST_SIGNING_KEY }}
        run: |
          echo $CERTIFICATE_BASE64 | base64 --decode > signing-cert.p12

      - name: Build & upload iOS binary
        working-directory: ios
        run: bundle exec fastlane ios build_upload_testflight
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY: ${{ secrets.ASC_PRIVATE_KEY }}
          SIGNING_KEY_PASSWORD: ${{ secrets.IOS_DIST_SIGNING_KEY_PASSWORD }}
          SIGNING_KEY_FILE_PATH: signing-cert.p12

      - name: Upload app-store ipa and dsyms to artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-store ipa & dsyms
          path: |
            ${{ github.workspace }}/ios/OneBoulder-iOS.ipa
            ${{ github.workspace }}/ios/*.app.dSYM.zip
